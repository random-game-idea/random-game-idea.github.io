{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["pick","list","Math","floor","random","length","Container","styled","div","Spacer","Content","Field","Button","button","App","props","rollFirstGenre","setState","firstGenre","genres","rollSecondGenre","secondGenre","rollFirstPrefix","firstPrefix","prefixes","rollSecondPrefix","secondPrefix","rollFirstTheme","firstTheme","themes","rollSecondTheme","secondTheme","state","this","onClick","Component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"m8CAMA,IAAMA,EAAO,SAACC,GAEV,OAAOA,EADOC,KAAKC,MAAMD,KAAKE,SAAWH,EAAKI,UAI5CC,EAAYC,IAAOC,IAAV,KAOTC,EAASF,IAAOC,IAAV,KAINE,EAAUH,IAAOC,IAAV,KAKPG,EAAQJ,IAAOC,IAAV,KAuBLI,EAASL,IAAOM,OAAV,KA6EGC,EAlEf,kDACI,WAAYC,GAAQ,IAAD,8BACf,cAAMA,IAYVC,eAAiB,WACb,EAAKC,SAAS,CACVC,WAAYlB,EAAKmB,MAfN,EAmBnBC,gBAAkB,WACd,EAAKH,SAAS,CACVI,YAAarB,EAAKmB,MArBP,EAyBnBG,gBAAkB,WACd,EAAKL,SAAS,CACVM,YAAavB,EAAKwB,MA3BP,EA+BnBC,iBAAmB,WACf,EAAKR,SAAS,CACVS,aAAc1B,EAAKwB,MAjCR,EAqCnBG,eAAiB,WACb,EAAKV,SAAS,CACVW,WAAY5B,EAAK6B,MAvCN,EA2CnBC,gBAAkB,WACd,EAAKb,SAAS,CACVc,YAAa/B,EAAK6B,MA1CtB,EAAKG,MAAQ,CACTd,WAAYlB,EAAKmB,GACjBE,YAAarB,EAAKmB,GAClBI,YAAavB,EAAKwB,GAClBE,aAAc1B,EAAKwB,GACnBI,WAAY5B,EAAK6B,GACjBE,YAAa/B,EAAK6B,IATP,EADvB,qDAkDc,IAAD,EAEmFI,KAAKD,MAArFT,EAFH,EAEGA,YAA2BL,GAF9B,EAEgBQ,aAFhB,EAE8BR,YAAyBU,GAFvD,EAE0CP,YAF1C,EAEuDO,YAFvD,EAEmEG,YAExE,OAAQ,eAACzB,EAAD,WACJ,cAACG,EAAD,IACA,eAACC,EAAD,WACI,eAACC,EAAD,WAAQY,EAAY,uBAAM,cAACX,EAAD,CAAQsB,QAASD,KAAKX,gBAAtB,qBAC1B,eAACX,EAAD,WAAQiB,EAAW,uBAAM,cAAChB,EAAD,CAAQsB,QAASD,KAAKN,eAAtB,qBACzB,eAAChB,EAAD,WAAQO,EAAW,uBAAM,cAACN,EAAD,CAAQsB,QAASD,KAAKjB,eAAtB,wBAE7B,cAACP,EAAD,WA7DZ,GAAyB0B,aCjDVC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,O,MCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,K","file":"static/js/main.3a70ce9d.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport styled from '@emotion/styled';\nimport genres from './genres.json';\nimport prefixes from './prefixes.json';\nimport themes from './themes.json';\n\nconst pick = (list) => {\n    const index = Math.floor(Math.random() * list.length);\n    return list[index];\n}\n\nconst Container = styled.div`\n    display: flex;\n    height: 100vh;\n    justify-content: center;\n    align-items: center;\n`;\n\nconst Spacer = styled.div`\n    flex: 1;\n`;\n\nconst Content = styled.div`\n    width: 1200px;\n    display: flex;\n`;\n\nconst Field = styled.div`\n    padding: 10px;\n    border: 3px solid #ffaa00;\n    flex: 1;\n    text-align: center;\n    font-family: Roboto;\n    font-size: 2rem;\n    border-left: none;\n    border-right: none;\n\n    &:first-of-type {\n        border-top-left-radius: 10px;\n        border-bottom-left-radius: 10px;\n        border-left: 3px solid #ffaa00;\n    }\n\n    &:last-of-type {\n        border-top-right-radius: 10px;\n        border-bottom-right-radius: 10px;\n        border-right: 3px solid #ffaa00;\n    }\n`;\n\nconst Button = styled.button`\n    margin-top: 50px;\n    padding: 10px;\n    background-color: #eee;\n    border: none;\n    border-radius: 5px;\n    font-family: Roboto;\n    font-weight: bold;\n    font-size: 1.5rem;\n`;\n\nexport class App extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            firstGenre: pick(genres),\n            secondGenre: pick(genres),\n            firstPrefix: pick(prefixes),\n            secondPrefix: pick(prefixes),\n            firstTheme: pick(themes),\n            secondTheme: pick(themes),\n        };\n    }\n\n    rollFirstGenre = () => {\n        this.setState({\n            firstGenre: pick(genres),\n        });\n    }\n\n    rollSecondGenre = () => {\n        this.setState({\n            secondGenre: pick(genres),\n        });\n    }\n\n    rollFirstPrefix = () => {\n        this.setState({\n            firstPrefix: pick(prefixes),\n        });\n    }\n\n    rollSecondPrefix = () => {\n        this.setState({\n            secondPrefix: pick(prefixes),\n        });\n    }\n\n    rollFirstTheme = () => {\n        this.setState({\n            firstTheme: pick(themes),\n        });\n    }\n\n    rollSecondTheme = () => {\n        this.setState({\n            secondTheme: pick(themes),\n        });\n    }\n\n    render() {\n\n        const { firstPrefix, secondPrefix, firstGenre, secondGenre, firstTheme, secondTheme } = this.state;\n\n        return (<Container>\n            <Spacer />\n            <Content>\n                <Field>{firstPrefix}<br /><Button onClick={this.rollFirstPrefix}>roll</Button></Field>\n                <Field>{firstTheme}<br /><Button onClick={this.rollFirstTheme}>roll</Button></Field>\n                <Field>{firstGenre}<br /><Button onClick={this.rollFirstGenre}>roll</Button></Field>\n            </Content>\n            <Spacer />\n        </Container>);\n    }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport \"./reset.css\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}